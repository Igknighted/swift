swift
================================================================================
A simplistic web CGI library for C++ in a less than monolithic form!

Features:
- Easy to use functions to set cookies, read cookies, and common request data.
- Supports file uploads in a simplistic manner.
- Has a built in templating system so that you can code first and HTML later.
- Built to easily follow an MVC pattern.
- Swiftbuilder for on the go staging/automated-building

The goal of swift is to acheive simplistic web development with C++ in an
apache + mod_cgi environment. One benefit to using C++ to make your website is
the ability to control everything. The methods to optimize a website in a lower
level language like C++ are almost limitless.


How to compile
================================================================================
Compiling should be as simple as this:
g++ example1_templates.cpp -o /home/username/public_html/example1_templates.cgi

It should run from www.yoursite.com/example1_templates.cgi

Note: Apache may need mod_cgi installed for this to work. The .htaccess file
sets things up for us. Also the preferred method for building is with the
swiftbuilder.


Swiftbuilder Setup
================================================================================
*** DO NOT USE SWIFTBUILDER YET. It is fundamentally broken ***
This was tested in a CentOS 6 environment. You need epel installed.

Run the setup script in the swiftbuilder directory.
# bash swiftbuilder/setup

Follow the instructions in it's output.


Examples
================================================================================

All the templates are stored in the html directory.

example1 - this example demonstrates a basic template and how to use the
template blocks. One block is parsed out twice and the other block is not.

example2 - this example demonstrates how to utilize variables in your code with
the template blocks.

example3 - this example demonstrates how to utilize a basic form on your site

example4 - this example demonstrates how to deal with storing a file that has
been uploaded as a part of multipart form data

example5 - this example demonstrates setting and unsetting cookies

example6 - this example demonstrates setting a header to do a redirect. Any
header you want can be set, not just redirects.

example7 - this example shows how to setup hooks with the hook command. Hooks
are essentially just dynamic libraries being loaded in.

example8 - Shows how to use MySQL with C++ and also has notes about what 
packages are needed in RHEL based systems as well as compile flags for MySQL.

License
================================================================================
Copyright (C) 2010 Samuel Peterson <sam.igknighted@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
